---
import { Pool } from 'pg';

const { slug } = Astro.params;

// Database connection
const connectionString = process.env.NEON_DATABASE_URL || process.env.DATABASE_URL || 
  'postgresql://ishanpathak@localhost:5432/artist_events';

const pool = new Pool({
  connectionString,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false,
});

// Get blog post by slug from database
async function getBlogBySlug(slug: string) {
  const client = await pool.connect();
  try {
    const result = await client.query(`
      SELECT 
        bp.id, bp.slug, bp.title, bp.content, bp.excerpt,
        bp.featured, bp.view_count, bp.like_count, bp.comment_count,
        bp.tags, bp.published_at, bp.created_at,
        u.name as author_name
      FROM blog_posts bp
      JOIN users u ON bp.author_id = u.id
      WHERE bp.slug = $1 AND bp.status = 'published'
    `, [slug]);
    
    return result.rows[0] || null;
  } finally {
    client.release();
  }
}

// Get related blogs (same author or similar tags, different post)
async function getRelatedBlogs(currentSlug: string, authorName: string, tags: string[]) {
  const client = await pool.connect();
  try {
    const result = await client.query(`
      SELECT 
        bp.id, bp.slug, bp.title, bp.excerpt,
        bp.featured, bp.like_count, bp.comment_count,
        bp.tags, bp.published_at, bp.created_at,
        u.name as author_name
      FROM blog_posts bp
      JOIN users u ON bp.author_id = u.id
      WHERE bp.status = 'published' 
        AND bp.slug != $1
        AND (u.name = $2 OR bp.tags && $3)
      ORDER BY bp.published_at DESC
      LIMIT 3
    `, [currentSlug, authorName, tags || []]);
    
    return result.rows;
  } finally {
    client.release();
  }
}

const dbBlog = await getBlogBySlug(slug);
if (!dbBlog) throw new Error("Blog post not found");

// Format blog to match the old JSON structure
const blog = {
  slug: dbBlog.slug,
  title: dbBlog.title,
  author: dbBlog.author_name,
  authorBio: '', // Not stored in current schema
  authorImage: '',
  publishedDate: dbBlog.published_at ? dbBlog.published_at.toISOString().split('T')[0] : dbBlog.created_at.toISOString().split('T')[0],
  readTime: `${Math.ceil(dbBlog.content.split(' ').length / 200)} min read`, // Estimate reading time
  excerpt: dbBlog.excerpt,
  content: dbBlog.content,
  category: 'General', // Default category since not in current schema
  tags: dbBlog.tags || [],
  featured: dbBlog.featured,
  likes: dbBlog.like_count || 0,
  comments: dbBlog.comment_count || 0
};

// Create share messages
const blogUrl = `${Astro.site || 'http://localhost:4321'}/blog/${blog.slug}`;
const shareMessage = `Check out this amazing story: "${blog.title}" by ${blog.author} on Artist Events! ${blogUrl}`;

// Get related blogs
const dbRelatedBlogs = await getRelatedBlogs(blog.slug, blog.author, blog.tags);
const relatedBlogs = dbRelatedBlogs.map(relatedBlog => ({
  slug: relatedBlog.slug,
  title: relatedBlog.title,
  author: relatedBlog.author_name,
  publishedDate: relatedBlog.published_at ? relatedBlog.published_at.toISOString().split('T')[0] : relatedBlog.created_at.toISOString().split('T')[0],
  readTime: `${Math.ceil(relatedBlog.content ? relatedBlog.content.split(' ').length / 200 : 5)} min read`,
  excerpt: relatedBlog.excerpt,
  category: 'General',
  tags: relatedBlog.tags || [],
  likes: relatedBlog.like_count || 0,
  comments: relatedBlog.comment_count || 0
}));
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{blog.title} - Artist Blog</title>
    <meta name="description" content={blog.excerpt} />
    <meta property="og:title" content={blog.title} />
    <meta property="og:description" content={blog.excerpt} />
    <meta property="og:url" content={blogUrl} />
    <meta name="twitter:card" content="summary_large_image" />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
        line-height: 1.7;
        color: #1a1a1a;
        background: #fafafa;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 20px;
      }

      .article-container {
        max-width: 740px;
        margin: 0 auto;
      }

      /* Header */
      .header {
        background: white;
        padding: 1rem 0;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        position: sticky;
        top: 0;
        z-index: 100;
      }

      .nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .logo {
        font-size: 1.5rem;
        font-weight: bold;
        color: #1a1a1a;
        text-decoration: none;
      }

      .nav-links {
        display: flex;
        gap: 2rem;
        list-style: none;
      }

      .nav-links a {
        color: #666;
        text-decoration: none;
        font-weight: 500;
        transition: color 0.3s;
      }

      .nav-links a:hover {
        color: #1a1a1a;
      }

      .back-link {
        color: #667eea;
        text-decoration: none;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        margin: 2rem 0;
        transition: all 0.3s;
      }

      .back-link:hover {
        color: #5a6fd8;
        transform: translateX(-3px);
      }

      /* Article Header */
      .article-header {
        background: white;
        padding: 3rem 0;
        text-align: center;
        margin-bottom: 2rem;
      }

      .category-badge {
        display: inline-block;
        background: #667eea;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 1.5rem;
      }

      .article-title {
        font-size: 2.5rem;
        font-weight: 700;
        line-height: 1.2;
        margin-bottom: 1rem;
        color: #1a1a1a;
        max-width: 800px;
        margin-left: auto;
        margin-right: auto;
      }

      .article-excerpt {
        font-size: 1.2rem;
        color: #666;
        line-height: 1.6;
        max-width: 600px;
        margin: 0 auto 2rem;
      }

      .article-meta {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 2rem;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
      }

      .author-info {
        display: flex;
        align-items: center;
        gap: 1rem;
      }

      .author-avatar {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 600;
        font-size: 1.1rem;
      }

      .author-details {
        text-align: left;
      }

      .author-name {
        font-weight: 600;
        color: #1a1a1a;
        font-size: 1rem;
      }

      .author-bio {
        color: #666;
        font-size: 0.85rem;
        max-width: 300px;
      }

      .article-stats {
        display: flex;
        gap: 1.5rem;
        color: #999;
        font-size: 0.9rem;
      }

      .engagement-stats {
        display: flex;
        gap: 1rem;
        color: #999;
        font-size: 0.9rem;
      }

      .tags-list {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 1rem;
      }

      .tag {
        background: #f0f0f0;
        color: #666;
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 500;
      }

      /* Article Content */
      .article-content {
        background: white;
        padding: 3rem;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        margin-bottom: 3rem;
      }

      .content {
        font-size: 1.1rem;
        line-height: 1.8;
        color: #333;
      }

      .content h1,
      .content h2,
      .content h3,
      .content h4 {
        color: #1a1a1a;
        margin: 2rem 0 1rem;
        font-weight: 600;
      }

      .content h1 {
        font-size: 2rem;
      }

      .content h2 {
        font-size: 1.6rem;
      }

      .content h3 {
        font-size: 1.3rem;
      }

      .content p {
        margin-bottom: 1.5rem;
      }

      .content p:last-child {
        margin-bottom: 0;
      }

      .content ul,
      .content ol {
        margin: 1.5rem 0;
        padding-left: 2rem;
      }

      .content li {
        margin-bottom: 0.5rem;
      }

      .content blockquote {
        border-left: 4px solid #667eea;
        padding: 1rem 1.5rem;
        margin: 2rem 0;
        background: #f8f9fa;
        border-radius: 0 8px 8px 0;
        font-style: italic;
        color: #555;
      }

      .content strong {
        font-weight: 600;
        color: #1a1a1a;
      }

      /* Social Share */
      .share-section {
        background: white;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        margin-bottom: 3rem;
        text-align: center;
      }

      .share-title {
        font-size: 1.2rem;
        margin-bottom: 1.5rem;
        color: #1a1a1a;
      }

      .share-buttons {
        display: flex;
        justify-content: center;
        gap: 1rem;
        flex-wrap: wrap;
      }

      .share-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 12px 20px;
        text-decoration: none;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s;
        cursor: pointer;
        border: none;
        font-size: 0.9rem;
      }

      .share-btn:hover {
        transform: translateY(-2px);
      }

      .share-btn.twitter {
        background: #1da1f2;
        color: white;
      }

      .share-btn.linkedin {
        background: #0077b5;
        color: white;
      }

      .share-btn.copy {
        background: #6c757d;
        color: white;
      }

      /* Related Posts */
      .related-section {
        background: white;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        margin-bottom: 3rem;
      }

      .related-title {
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
        text-align: center;
        color: #1a1a1a;
      }

      .related-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
      }

      .related-card {
        padding: 1.5rem;
        border: 1px solid #f0f0f0;
        border-radius: 8px;
        text-decoration: none;
        color: inherit;
        transition: all 0.3s;
      }

      .related-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
      }

      .related-card-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: #1a1a1a;
      }

      .related-card-excerpt {
        color: #666;
        font-size: 0.9rem;
        line-height: 1.6;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }

      .related-card-meta {
        margin-top: 1rem;
        padding-top: 1rem;
        border-top: 1px solid #f0f0f0;
        font-size: 0.8rem;
        color: #999;
        display: flex;
        justify-content: space-between;
      }

      /* Footer Navigation */
      .footer-nav {
        text-align: center;
        padding: 2rem 0;
        margin-top: 2rem;
        border-top: 1px solid #e9ecef;
      }

      .footer-nav a {
        color: #667eea;
        text-decoration: none;
        font-weight: 500;
        margin: 0 1rem;
      }

      .footer-nav a:hover {
        text-decoration: underline;
      }

      /* Responsive */
      @media (max-width: 768px) {
        .article-title {
          font-size: 2rem;
        }

        .article-content {
          padding: 2rem 1.5rem;
        }

        .content {
          font-size: 1rem;
        }

        .article-meta {
          gap: 1rem;
        }

        .share-buttons {
          flex-direction: column;
          align-items: center;
        }

        .related-grid {
          grid-template-columns: 1fr;
        }

        .nav-links {
          gap: 1rem;
        }
      }
    </style>
  </head>
  <body>
    <!-- Header -->
    <header class="header">
      <nav class="nav container">
        <a href="/" class="logo">🎵 Artist Events</a>
        <ul class="nav-links">
          <li><a href="/">Home</a></li>
          <li><a href="/events">Events</a></li>
          <li><a href="/blog">Blog</a></li>
          <li><a href="/blog/submit">Write</a></li>
          <li><a href="/search">Search</a></li>
        </ul>
      </nav>
    </header>

    <div class="container">
      <a href="/blog" class="back-link">← Back to Blog</a>
    </div>

    <!-- Article Header -->
    <section class="article-header">
      <div class="article-container">
        <div class="category-badge">{blog.category}</div>
        <h1 class="article-title">{blog.title}</h1>
        <p class="article-excerpt">{blog.excerpt}</p>
        
        <div class="article-meta">
          <div class="author-info">
            <div class="author-avatar">
              {blog.author.split(' ').map(name => name[0]).join('')}
            </div>
            <div class="author-details">
              <div class="author-name">{blog.author}</div>
              <div class="author-bio">{blog.authorBio}</div>
            </div>
          </div>
          
          <div class="article-stats">
            <span>{new Date(blog.publishedDate).toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}</span>
            <span>{blog.readTime}</span>
          </div>
        </div>

        <div class="engagement-stats">
          <span>❤️ {blog.likes} likes</span>
          <span>💬 {blog.comments} comments</span>
        </div>

        <div class="tags-list">
          {blog.tags.map(tag => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      </div>
    </section>

    <!-- Article Content -->
    <main class="article-container">
      <article class="article-content">
        <div class="content">
          {blog.content.split('\n\n').map(paragraph => {
            if (paragraph.startsWith('## ')) {
              return <h2>{paragraph.substring(3)}</h2>;
            } else if (paragraph.startsWith('### ')) {
              return <h3>{paragraph.substring(4)}</h3>;
            } else if (paragraph.startsWith('- ')) {
              const listItems = paragraph.split('\n').filter(item => item.startsWith('- '));
              return (
                <ul>
                  {listItems.map(item => <li>{item.substring(2)}</li>)}
                </ul>
              );
            } else if (paragraph.match(/^\d+\./)) {
              const listItems = paragraph.split('\n').filter(item => item.match(/^\d+\./));
              return (
                <ol>
                  {listItems.map(item => <li>{item.replace(/^\d+\.\s/, '')}</li>)}
                </ol>
              );
            } else {
              return <p>{paragraph}</p>;
            }
          })}
        </div>
      </article>

      <!-- Social Share -->
      <section class="share-section">
        <h3 class="share-title">Share this story:</h3>
        <div class="share-buttons">
          <!-- X (Twitter) Share -->
          <a href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(shareMessage)}`} 
             target="_blank" 
             class="share-btn twitter">
            <span>🐦</span>
            Share on X
          </a>

          <!-- LinkedIn Share -->
          <a href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(blogUrl)}&title=${encodeURIComponent(blog.title)}`} 
             target="_blank" 
             class="share-btn linkedin">
            <span>💼</span>
            Share on LinkedIn
          </a>

          <!-- Copy Link -->
          <button onclick={`navigator.clipboard.writeText("${blogUrl}"); alert("Blog link copied to clipboard!")`} 
                  class="share-btn copy">
            <span>🔗</span>
            Copy Link
          </button>
        </div>
      </section>

      <!-- Related Posts -->
      {relatedBlogs.length > 0 && (
        <section class="related-section">
          <h3 class="related-title">More in {blog.category}</h3>
          <div class="related-grid">
            {relatedBlogs.map(relatedBlog => (
              <a href={`/blog/${relatedBlog.slug}`} class="related-card">
                <h4 class="related-card-title">{relatedBlog.title}</h4>
                <p class="related-card-excerpt">{relatedBlog.excerpt}</p>
                <div class="related-card-meta">
                  <span>{relatedBlog.author}</span>
                  <span>{relatedBlog.readTime}</span>
                </div>
              </a>
            ))}
          </div>
        </section>
      )}
    </main>

    <!-- Footer Navigation -->
    <div class="footer-nav container">
      <a href="/">🏠 Home</a>
      <a href="/blog">📖 Blog</a>
      <a href="/events">🎵 Events</a>
      <a href="/blog/submit">✍️ Write</a>
    </div>
  </body>
</html> 