---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { Pool } from 'pg';
import dotenv from 'dotenv';

// Load environment variables
dotenv.config();

// Database configuration
const DB_CONFIG = (() => {
  if (process.env.NEON_DATABASE_URL) {
    return {
      connectionString: process.env.NEON_DATABASE_URL,
      ssl: { rejectUnauthorized: false }
    };
  }
  
  if (process.env.DATABASE_URL) {
    return {
      connectionString: process.env.DATABASE_URL,
      ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
    };
  }
  
  return {
    host: process.env.DB_HOST || 'localhost',
    port: process.env.DB_PORT || 5432,
    database: process.env.DB_NAME || 'artist_events',
    user: process.env.DB_USER || 'ishanpathak',
    password: process.env.DB_PASSWORD || '',
    ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
  };
})();

const pool = new Pool(DB_CONFIG);

// Check admin authentication
const token = Astro.cookies.get('session_token')?.value;
if (!token) {
    return Astro.redirect('/auth/login?error=no_session');
}

// Verify admin status directly with database
let user = null;
try {
    const sessionResult = await pool.query(`
        SELECT us.user_id, us.expires_at, u.email, u.name, u.user_type, u.active, u.avatar_url
        FROM user_sessions us
        JOIN users u ON us.user_id = u.id
        WHERE us.session_token = $1 AND us.expires_at > NOW()
    `, [token]);
    
    if (sessionResult.rows.length === 0) {
        return Astro.redirect('/auth/login?error=invalid_session');
    }
    
    user = sessionResult.rows[0];
    
    if (!user.active) {
        return Astro.redirect('/auth/login?error=account_deactivated');
    }
    
    // Check if user is admin
    const isAdmin = user.user_type === 'admin' || user.email === 'ishan.pathak2711@gmail.com';
    if (!isAdmin) {
        return Astro.redirect('/?error=unauthorized');
    }
    
} catch (error) {
    console.error('Admin auth error:', error);
    return Astro.redirect('/auth/login?error=server_error');
}
---

<AdminLayout title="Event Aggregation Management">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900">Event Aggregation System</h1>
            <p class="mt-2 text-gray-600">Manage multi-source event collection with ML-based deduplication</p>
        </div>

        <!-- Stats Overview -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <div class="bg-white p-6 rounded-lg shadow-sm border">
                <div class="flex items-center">
                    <div class="p-2 bg-blue-100 rounded-lg">
                        <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 1.79 4 4 4h8c0 2.21 1.79 4 4 4V7c0-2.21-1.79-4-4-4H8c-2.21 0-4 1.79-4 4z"></path>
                        </svg>
                    </div>
                    <div class="ml-4">
                        <h3 class="text-lg font-semibold text-gray-900" id="totalEvents">0</h3>
                        <p class="text-sm text-gray-600">Total Events</p>
                    </div>
                </div>
            </div>

            <div class="bg-white p-6 rounded-lg shadow-sm border">
                <div class="flex items-center">
                    <div class="p-2 bg-green-100 rounded-lg">
                        <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                    <div class="ml-4">
                        <h3 class="text-lg font-semibold text-gray-900" id="activeSources">0</h3>
                        <p class="text-sm text-gray-600">Active Sources</p>
                    </div>
                </div>
            </div>

            <div class="bg-white p-6 rounded-lg shadow-sm border">
                <div class="flex items-center">
                    <div class="p-2 bg-yellow-100 rounded-lg">
                        <svg class="w-6 h-6 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"></path>
                        </svg>
                    </div>
                    <div class="ml-4">
                        <h3 class="text-lg font-semibold text-gray-900" id="duplicatesDetected">0</h3>
                        <p class="text-sm text-gray-600">Duplicates Detected</p>
                    </div>
                </div>
            </div>

            <div class="bg-white p-6 rounded-lg shadow-sm border">
                <div class="flex items-center">
                    <div class="p-2 bg-purple-100 rounded-lg">
                        <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                        </svg>
                    </div>
                    <div class="ml-4">
                        <h3 class="text-lg font-semibold text-gray-900" id="mlConfidence">0%</h3>
                        <p class="text-sm text-gray-600">Avg ML Confidence</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex space-x-4 mb-8">
            <button id="runSync" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                <svg class="w-5 h-5 inline-block mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                </svg>
                Run Full Sync
            </button>

            <button id="reviewDuplicates" class="bg-yellow-600 hover:bg-yellow-700 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                <svg class="w-5 h-5 inline-block mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                </svg>
                Review Duplicates
            </button>

            <button id="addSource" class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                <svg class="w-5 h-5 inline-block mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Add Source
            </button>
        </div>

        <!-- Main Content Tabs -->
        <div class="bg-white rounded-lg shadow-sm border">
            <div class="border-b border-gray-200">
                <nav class="-mb-px flex space-x-8" aria-label="Tabs">
                    <button class="tab-button active py-4 px-1 border-b-2 font-medium text-sm" data-tab="sources">
                        Event Sources
                    </button>
                    <button class="tab-button py-4 px-1 border-b-2 font-medium text-sm" data-tab="jobs">
                        Sync Jobs
                    </button>
                    <button class="tab-button py-4 px-1 border-b-2 font-medium text-sm" data-tab="duplicates">
                        Duplicate Management
                    </button>
                    <button class="tab-button py-4 px-1 border-b-2 font-medium text-sm" data-tab="ml">
                        ML Models
                    </button>
                    <button class="tab-button py-4 px-1 border-b-2 font-medium text-sm" data-tab="webhooks">
                        Webhooks
                    </button>
                </nav>
            </div>

            <!-- Sources Tab -->
            <div id="sources" class="tab-content p-6">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-xl font-semibold text-gray-900">Event Sources</h2>
                    <div class="flex space-x-3">
                        <select id="sourceFilter" class="border-gray-300 rounded-md shadow-sm">
                            <option value="">All Types</option>
                            <option value="api">API</option>
                            <option value="webhook">Webhook</option>
                            <option value="scraper">Scraper</option>
                            <option value="manual">Manual</option>
                        </select>
                    </div>
                </div>

                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Source</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Sync</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Events</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="sourcesTable" class="bg-white divide-y divide-gray-200">
                            <!-- Sources will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Jobs Tab -->
            <div id="jobs" class="tab-content p-6 hidden">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-xl font-semibold text-gray-900">Sync Jobs</h2>
                    <div class="flex space-x-3">
                        <select id="jobFilter" class="border-gray-300 rounded-md shadow-sm">
                            <option value="">All Jobs</option>
                            <option value="running">Running</option>
                            <option value="completed">Completed</option>
                            <option value="failed">Failed</option>
                        </select>
                    </div>
                </div>

                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Job ID</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Source</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Progress</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Started</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="jobsTable" class="bg-white divide-y divide-gray-200">
                            <!-- Jobs will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Duplicates Tab -->
            <div id="duplicates" class="tab-content p-6 hidden">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-xl font-semibold text-gray-900">Duplicate Detection</h2>
                    <div class="flex space-x-3">
                        <select id="duplicateFilter" class="border-gray-300 rounded-md shadow-sm">
                            <option value="">All Duplicates</option>
                            <option value="detected">Detected</option>
                            <option value="confirmed">Confirmed</option>
                            <option value="rejected">Rejected</option>
                        </select>
                        <button id="runDuplicateDetection" class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md font-medium text-sm">
                            Run Detection
                        </button>
                    </div>
                </div>

                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Events</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Similarity</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Method</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Confidence</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="duplicatesTable" class="bg-white divide-y divide-gray-200">
                            <!-- Duplicates will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- ML Models Tab -->
            <div id="ml" class="tab-content p-6 hidden">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-xl font-semibold text-gray-900">ML Models</h2>
                    <button id="trainModels" class="bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-md font-medium text-sm">
                        Retrain Models
                    </button>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <div class="bg-gray-50 p-6 rounded-lg">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Deduplication Model</h3>
                        <div class="space-y-3">
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Accuracy:</span>
                                <span class="text-sm font-medium text-gray-900" id="dedupAccuracy">--</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Version:</span>
                                <span class="text-sm font-medium text-gray-900" id="dedupVersion">--</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Last Trained:</span>
                                <span class="text-sm font-medium text-gray-900" id="dedupTrained">--</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-blue-600 h-2 rounded-full" style="width: 85%" id="dedupProgress"></div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-gray-50 p-6 rounded-lg">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Categorization Model</h3>
                        <div class="space-y-3">
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Accuracy:</span>
                                <span class="text-sm font-medium text-gray-900" id="catAccuracy">--</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Version:</span>
                                <span class="text-sm font-medium text-gray-900" id="catVersion">--</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Last Trained:</span>
                                <span class="text-sm font-medium text-gray-900" id="catTrained">--</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-green-600 h-2 rounded-full" style="width: 92%" id="catProgress"></div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-gray-50 p-6 rounded-lg">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Location Model</h3>
                        <div class="space-y-3">
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Accuracy:</span>
                                <span class="text-sm font-medium text-gray-900" id="locAccuracy">--</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Version:</span>
                                <span class="text-sm font-medium text-gray-900" id="locVersion">--</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Last Trained:</span>
                                <span class="text-sm font-medium text-gray-900" id="locTrained">--</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="bg-purple-600 h-2 rounded-full" style="width: 78%" id="locProgress"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Webhooks Tab -->
            <div id="webhooks" class="tab-content p-6 hidden">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-xl font-semibold text-gray-900">Webhook Events</h2>
                    <div class="flex space-x-3">
                        <select id="webhookFilter" class="border-gray-300 rounded-md shadow-sm">
                            <option value="">All Events</option>
                            <option value="false">Unprocessed</option>
                            <option value="true">Processed</option>
                        </select>
                        <button id="clearWebhooks" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md font-medium text-sm">
                            Clear Old Events
                        </button>
                    </div>
                </div>

                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Source</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Event Type</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Received</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Processed</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="webhooksTable" class="bg-white divide-y divide-gray-200">
                            <!-- Webhooks will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Modals -->
    <!-- Add Source Modal -->
    <div id="addSourceModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
        <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
            <div class="mt-3">
                <h3 class="text-lg font-medium text-gray-900 mb-4">Add Event Source</h3>
                <form id="addSourceForm" class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Name</label>
                        <input type="text" name="name" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Type</label>
                        <select name="type" required class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            <option value="api">API</option>
                            <option value="webhook">Webhook</option>
                            <option value="scraper">Scraper</option>
                            <option value="manual">Manual</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Base URL</label>
                        <input type="url" name="base_url" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Sync Frequency (minutes)</label>
                        <input type="number" name="sync_frequency" value="60" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                    </div>
                    <div class="flex justify-end space-x-3 pt-4">
                        <button type="button" id="cancelAddSource" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md">
                            Cancel
                        </button>
                        <button type="submit" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-md">
                            Add Source
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Tab functionality
        document.querySelectorAll('.tab-button').forEach(button => {
            button.addEventListener('click', () => {
                const tabName = button.dataset.tab;
                
                // Update active tab button
                document.querySelectorAll('.tab-button').forEach(btn => {
                    btn.classList.remove('active', 'border-blue-500', 'text-blue-600');
                    btn.classList.add('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');
                });
                button.classList.add('active', 'border-blue-500', 'text-blue-600');
                button.classList.remove('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');
                
                // Show/hide tab content
                document.querySelectorAll('.tab-content').forEach(content => {
                    content.classList.add('hidden');
                });
                document.getElementById(tabName).classList.remove('hidden');
                
                // Load tab data
                loadTabData(tabName);
            });
        });

        // Load initial data
        loadTabData('sources');
        loadDashboardStats();

        // Event listeners
        document.getElementById('runSync').addEventListener('click', runFullSync);
        document.getElementById('addSource').addEventListener('click', () => {
            document.getElementById('addSourceModal').classList.remove('hidden');
        });
        document.getElementById('cancelAddSource').addEventListener('click', () => {
            document.getElementById('addSourceModal').classList.add('hidden');
        });
        document.getElementById('addSourceForm').addEventListener('submit', handleAddSource);

        // Load dashboard statistics
        async function loadDashboardStats() {
            try {
                const response = await fetch('/api/admin/aggregation/stats');
                const stats = await response.json();
                
                document.getElementById('totalEvents').textContent = stats.totalEvents || 0;
                document.getElementById('activeSources').textContent = stats.activeSources || 0;
                document.getElementById('duplicatesDetected').textContent = stats.duplicatesDetected || 0;
                document.getElementById('mlConfidence').textContent = (stats.avgConfidence * 100).toFixed(1) + '%' || '0%';
            } catch (error) {
                console.error('Error loading stats:', error);
            }
        }

        // Load tab data based on active tab
        async function loadTabData(tabName) {
            switch (tabName) {
                case 'sources':
                    await loadSources();
                    break;
                case 'jobs':
                    await loadJobs();
                    break;
                case 'duplicates':
                    await loadDuplicates();
                    break;
                case 'ml':
                    await loadMLModels();
                    break;
                case 'webhooks':
                    await loadWebhooks();
                    break;
            }
        }

        // Load event sources
        async function loadSources() {
            try {
                const response = await fetch('/api/admin/aggregation/sources');
                const sources = await response.json();
                
                const tbody = document.getElementById('sourcesTable');
                tbody.innerHTML = sources.map(source => `
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="text-sm font-medium text-gray-900">${source.name}</div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                ${source.type}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(source.sync_status)}">
                                ${source.sync_status}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                            ${source.last_sync_at ? new Date(source.last_sync_at).toLocaleString() : 'Never'}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                            ${source.event_count || 0}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <button onclick="syncSource(${source.id})" class="text-blue-600 hover:text-blue-900 mr-3">Sync</button>
                            <button onclick="editSource(${source.id})" class="text-indigo-600 hover:text-indigo-900 mr-3">Edit</button>
                            <button onclick="toggleSource(${source.id}, ${!source.is_active})" class="text-${source.is_active ? 'red' : 'green'}-600 hover:text-${source.is_active ? 'red' : 'green'}-900">
                                ${source.is_active ? 'Disable' : 'Enable'}
                            </button>
                        </td>
                    </tr>
                `).join('');
            } catch (error) {
                console.error('Error loading sources:', error);
            }
        }

        // Utility functions
        function getStatusColor(status) {
            switch (status) {
                case 'active': return 'bg-green-100 text-green-800';
                case 'error': return 'bg-red-100 text-red-800';
                case 'pending': return 'bg-yellow-100 text-yellow-800';
                default: return 'bg-gray-100 text-gray-800';
            }
        }

        // Action handlers
        async function runFullSync() {
            try {
                const response = await fetch('/api/admin/aggregation/sync', { method: 'POST' });
                if (response.ok) {
                    alert('Full sync started successfully');
                    setTimeout(() => loadTabData('jobs'), 1000);
                } else {
                    alert('Failed to start sync');
                }
            } catch (error) {
                console.error('Error starting sync:', error);
                alert('Error starting sync');
            }
        }

        async function handleAddSource(e) {
            e.preventDefault();
            const formData = new FormData(e.target);
            const sourceData = Object.fromEntries(formData);
            
            try {
                const response = await fetch('/api/admin/aggregation/sources', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(sourceData)
                });
                
                if (response.ok) {
                    document.getElementById('addSourceModal').classList.add('hidden');
                    e.target.reset();
                    await loadSources();
                } else {
                    alert('Failed to add source');
                }
            } catch (error) {
                console.error('Error adding source:', error);
                alert('Error adding source');
            }
        }

        // Placeholder functions for other operations
        async function loadJobs() {
            // Implementation for loading sync jobs
            console.log('Loading sync jobs...');
        }

        async function loadDuplicates() {
            // Implementation for loading duplicates
            console.log('Loading duplicates...');
        }

        async function loadMLModels() {
            // Implementation for loading ML model stats
            console.log('Loading ML models...');
        }

        async function loadWebhooks() {
            // Implementation for loading webhook events
            console.log('Loading webhook events...');
        }

        function syncSource(sourceId) {
            // Implementation for syncing specific source
            console.log('Syncing source:', sourceId);
        }

        function editSource(sourceId) {
            // Implementation for editing source
            console.log('Editing source:', sourceId);
        }

        function toggleSource(sourceId, enable) {
            // Implementation for enabling/disabling source
            console.log('Toggling source:', sourceId, enable);
        }
    </script>

    <style>
        .tab-button.active {
            @apply border-blue-500 text-blue-600;
        }
        .tab-button:not(.active) {
            @apply border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300;
        }
    </style>
</AdminLayout> 