---
import Navigation from '../../components/Navigation.astro';
import { Pool } from 'pg';

// Helper function to parse cookies
function parseCookie(cookieString, name) {
    const cookies = cookieString.split(';').map(cookie => cookie.trim());
    
    for (const cookie of cookies) {
        const [cookieName, cookieValue] = cookie.split('=');
        if (cookieName === name) {
            return decodeURIComponent(cookieValue);
        }
    }
    
    return null;
}

// Database connection
const connectionString = process.env.NEON_DATABASE_URL || process.env.DATABASE_URL || 
  'postgresql://ishanpathak@localhost:5432/artist_events';

const pool = new Pool({
  connectionString,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false,
});

// Check if user has a session cookie and validate it
const cookies = Astro.request.headers.get('cookie');
let currentUser = null;

if (!cookies) {
    return new Response(null, {
        status: 302,
        headers: { Location: '/auth/login?redirect=/dashboard/artist' }
    });
}

const sessionToken = parseCookie(cookies, 'session_token');
if (!sessionToken) {
    return new Response(null, {
        status: 302,
        headers: { Location: '/auth/login?redirect=/dashboard/artist' }
    });
}

// Validate session and get user data
try {
    const client = await pool.connect();
    const sessionResult = await client.query(
        'SELECT u.* FROM users u JOIN user_sessions s ON u.id = s.user_id WHERE s.session_token = $1 AND s.expires_at > NOW()',
        [sessionToken]
    );
    
    if (sessionResult.rows.length === 0) {
        client.release();
        return new Response(null, {
            status: 302,
            headers: { Location: '/auth/login?redirect=/dashboard/artist' }
        });
    }
    
    currentUser = sessionResult.rows[0];
    client.release();
} catch (error) {
    console.error('Session validation error:', error);
    return new Response(null, {
        status: 302,
        headers: { Location: '/auth/login?redirect=/dashboard/artist' }
    });
}

// If we reach here, user is authenticated
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Artist Dashboard - Artist Events</title>
    <meta name="description" content="Manage your artist profile, events, and engagement metrics" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
        color: #334155;
        line-height: 1.6;
        min-height: 100vh;
      }

      .dashboard-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem 20px;
      }

      /* Header Section */
      .dashboard-header {
        background: white;
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05);
        border: 1px solid rgba(226, 232, 240, 0.8);
      }

      .welcome-section {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 1.5rem;
      }

      .welcome-text h1 {
        font-size: 2rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 0.5rem;
      }

      .welcome-text p {
        color: #64748b;
        font-size: 1.1rem;
      }

      .header-actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
      }

      .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 12px 20px;
        border-radius: 12px;
        text-decoration: none;
        font-weight: 600;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
      }

      .btn-primary {
        background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
        color: white;
      }

      .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
      }

      .btn-secondary {
        background: rgba(59, 130, 246, 0.1);
        color: #3b82f6;
        border: 1px solid rgba(59, 130, 246, 0.2);
      }

      .btn-secondary:hover {
        background: rgba(59, 130, 246, 0.15);
        transform: translateY(-1px);
      }

      /* Stats Grid */
      .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
      }

      .stat-card {
        background: white;
        border-radius: 16px;
        padding: 1.5rem;
        border: 1px solid rgba(226, 232, 240, 0.8);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
      }

      .stat-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
      }

      .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--accent-color);
      }

      .stat-card.events::before {
        --accent-color: linear-gradient(90deg, #3b82f6, #1d4ed8);
      }

      .stat-card.views::before {
        --accent-color: linear-gradient(90deg, #10b981, #059669);
      }

      .stat-card.likes::before {
        --accent-color: linear-gradient(90deg, #f59e0b, #d97706);
      }

      .stat-card.followers::before {
        --accent-color: linear-gradient(90deg, #8b5cf6, #7c3aed);
      }

      .stat-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1rem;
      }

      .stat-icon {
        width: 48px;
        height: 48px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
      }

      .stat-card.events .stat-icon {
        background: rgba(59, 130, 246, 0.1);
        color: #3b82f6;
      }

      .stat-card.views .stat-icon {
        background: rgba(16, 185, 129, 0.1);
        color: #10b981;
      }

      .stat-card.likes .stat-icon {
        background: rgba(245, 158, 11, 0.1);
        color: #f59e0b;
      }

      .stat-card.followers .stat-icon {
        background: rgba(139, 92, 246, 0.1);
        color: #8b5cf6;
      }

      .stat-trend {
        font-size: 0.8rem;
        font-weight: 600;
        padding: 4px 8px;
        border-radius: 6px;
      }

      .trend-up {
        background: rgba(16, 185, 129, 0.1);
        color: #10b981;
      }

      .trend-down {
        background: rgba(239, 68, 68, 0.1);
        color: #ef4444;
      }

      .stat-value {
        font-size: 2.5rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 0.25rem;
      }

      .stat-label {
        color: #64748b;
        font-weight: 500;
      }

      /* Main Content Grid */
      .main-grid {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 2rem;
        margin-bottom: 2rem;
      }

      /* Quick Actions */
      .quick-actions {
        background: white;
        border-radius: 16px;
        padding: 1.5rem;
        border: 1px solid rgba(226, 232, 240, 0.8);
      }

      .section-title {
        font-size: 1.3rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }

      .actions-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
      }

      .action-card {
        background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
        border: 1px solid rgba(226, 232, 240, 0.6);
        border-radius: 12px;
        padding: 1.5rem;
        text-decoration: none;
        color: inherit;
        transition: all 0.3s ease;
        text-align: center;
      }

      .action-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        border-color: #3b82f6;
      }

      .action-icon {
        font-size: 2rem;
        margin-bottom: 0.75rem;
        display: block;
      }

      .action-title {
        font-weight: 600;
        color: #1e293b;
        margin-bottom: 0.5rem;
      }

      .action-desc {
        font-size: 0.85rem;
        color: #64748b;
      }

      /* Activity Feed */
      .activity-section {
        background: white;
        border-radius: 16px;
        padding: 1.5rem;
        border: 1px solid rgba(226, 232, 240, 0.8);
      }

      .activity-item {
        display: flex;
        gap: 1rem;
        padding: 1rem 0;
        border-bottom: 1px solid #f1f5f9;
      }

      .activity-item:last-child {
        border-bottom: none;
      }

      .activity-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.1rem;
        flex-shrink: 0;
      }

      .activity-icon.event {
        background: rgba(59, 130, 246, 0.1);
        color: #3b82f6;
      }

      .activity-icon.like {
        background: rgba(245, 158, 11, 0.1);
        color: #f59e0b;
      }

      .activity-icon.follow {
        background: rgba(139, 92, 246, 0.1);
        color: #8b5cf6;
      }

      .activity-content {
        flex: 1;
      }

      .activity-text {
        color: #334155;
        margin-bottom: 0.25rem;
      }

      .activity-time {
        font-size: 0.8rem;
        color: #64748b;
      }

      /* Profile Section */
      .profile-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
      }

      .profile-card {
        background: white;
        border-radius: 16px;
        padding: 1.5rem;
        border: 1px solid rgba(226, 232, 240, 0.8);
      }

      .profile-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
      }

      .profile-avatar {
        width: 64px;
        height: 64px;
        border-radius: 50%;
        background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 700;
        font-size: 1.5rem;
      }

      .profile-info h3 {
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 0.25rem;
      }

      .profile-type {
        color: #3b82f6;
        font-weight: 600;
        font-size: 0.9rem;
      }

      .profile-fields {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }

      .field-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
      }

      .field-label {
        font-weight: 600;
        color: #374151;
        font-size: 0.9rem;
      }

      .field-input {
        padding: 12px;
        border: 1px solid #d1d5db;
        border-radius: 8px;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        background: white;
      }

      .field-input:focus {
        outline: none;
        border-color: #3b82f6;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
      }

      .field-select {
        padding: 12px;
        border: 1px solid #d1d5db;
        border-radius: 8px;
        font-size: 0.9rem;
        background: white;
        cursor: pointer;
      }

      /* Loading States */
      .loading {
        display: none;
        text-align: center;
        padding: 2rem;
        color: #64748b;
      }

      .loading.show {
        display: block;
      }

      .spinner {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 2px solid #f3f4f6;
        border-radius: 50%;
        border-top-color: #3b82f6;
        animation: spin 1s ease-in-out infinite;
      }

      @keyframes spin {
        to { transform: rotate(360deg); }
      }

      /* Responsive Design */
      @media (max-width: 1024px) {
        .main-grid {
          grid-template-columns: 1fr;
        }
      }

      @media (max-width: 768px) {
        .dashboard-container {
          padding: 1rem 16px;
        }

        .welcome-section {
          flex-direction: column;
          align-items: flex-start;
          gap: 1rem;
        }

        .stats-grid {
          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        }

        .actions-grid {
          grid-template-columns: 1fr;
        }

        .header-actions {
          width: 100%;
        }

        .btn {
          flex: 1;
          justify-content: center;
        }
      }

      @media (max-width: 480px) {
        .stats-grid {
          grid-template-columns: 1fr;
        }

        .stat-value {
          font-size: 2rem;
        }

        .welcome-text h1 {
          font-size: 1.5rem;
        }
      }
    </style>
  </head>
  <body>
    <Navigation currentPage="dashboard" />

    <main class="dashboard-container">
      <!-- Loading State -->
      <div class="loading show" id="loadingState">
        <div class="spinner"></div>
        <p>Loading your dashboard...</p>
      </div>

      <!-- Dashboard Content -->
      <div id="dashboardContent" style="display: none;">
        <!-- Header Section -->
        <section class="dashboard-header">
          <div class="welcome-section">
            <div class="welcome-text">
              <h1>Welcome back, <span id="artistName">Artist</span>! 🎵</h1>
              <p>Here's what's happening with your artistic journey today.</p>
            </div>
            <div class="header-actions">
              <a href="/submit" class="btn btn-primary">
                <span>+</span>
                Create Event
              </a>
              <a href="/blog/submit" class="btn btn-secondary">
                <span>✍️</span>
                Write Story
              </a>
            </div>
          </div>
        </section>

        <!-- Stats Grid -->
        <section class="stats-grid">
          <div class="stat-card events">
            <div class="stat-header">
              <div class="stat-icon">🎪</div>
              <span class="stat-trend trend-up">+12%</span>
            </div>
            <div class="stat-value" id="eventsCount">0</div>
            <div class="stat-label">Events Created</div>
          </div>

          <div class="stat-card views">
            <div class="stat-header">
              <div class="stat-icon">👀</div>
              <span class="stat-trend trend-up">+8%</span>
            </div>
            <div class="stat-value" id="totalViews">0</div>
            <div class="stat-label">Profile Views</div>
          </div>

          <div class="stat-card likes">
            <div class="stat-header">
              <div class="stat-icon">❤️</div>
              <span class="stat-trend trend-up">+15%</span>
            </div>
            <div class="stat-value" id="totalLikes">0</div>
            <div class="stat-label">Total Likes</div>
          </div>

          <div class="stat-card followers">
            <div class="stat-header">
              <div class="stat-icon">👥</div>
              <span class="stat-trend trend-up">+5%</span>
            </div>
            <div class="stat-value" id="followersCount">0</div>
            <div class="stat-label">Followers</div>
          </div>
        </section>

        <!-- Main Content Grid -->
        <div class="main-grid">
          <!-- Quick Actions -->
          <section class="quick-actions">
            <h2 class="section-title">
              <span>⚡</span>
              Quick Actions
            </h2>
            <div class="actions-grid">
              <a href="/submit" class="action-card">
                <span class="action-icon">🎯</span>
                <div class="action-title">Create Event</div>
                <div class="action-desc">Share your upcoming performance or show</div>
              </a>

              <a href="/blog/submit" class="action-card">
                <span class="action-icon">✍️</span>
                <div class="action-title">Write Story</div>
                <div class="action-desc">Share your artistic journey and insights</div>
              </a>

              <a href="/dashboard/email-campaigns" class="action-card">
                <span class="action-icon">📧</span>
                <div class="action-title">Email Campaigns</div>
                <div class="action-desc">Connect directly with your fans</div>
              </a>

              <a href="/events" class="action-card">
                <span class="action-icon">📅</span>
                <div class="action-title">Manage Events</div>
                <div class="action-desc">View and edit your published events</div>
              </a>

              <a href="#profile" class="action-card" onclick="scrollToProfile()">
                <span class="action-icon">👤</span>
                <div class="action-title">Update Profile</div>
                <div class="action-desc">Customize your artist information</div>
              </a>
            </div>
          </section>

          <!-- Activity Feed -->
          <section class="activity-section">
            <h2 class="section-title">
              <span>📈</span>
              Recent Activity
            </h2>
            <div id="activityFeed">
              <div class="activity-item">
                <div class="activity-icon event">🎪</div>
                <div class="activity-content">
                  <div class="activity-text">Your latest event gained 5 new likes</div>
                  <div class="activity-time">2 hours ago</div>
                </div>
              </div>

              <div class="activity-item">
                <div class="activity-icon like">❤️</div>
                <div class="activity-content">
                  <div class="activity-text">Someone liked your story "My Musical Journey"</div>
                  <div class="activity-time">5 hours ago</div>
                </div>
              </div>

              <div class="activity-item">
                <div class="activity-icon follow">👥</div>
                <div class="activity-content">
                  <div class="activity-text">3 new people are following you</div>
                  <div class="activity-time">1 day ago</div>
                </div>
              </div>

              <div class="activity-item">
                <div class="activity-icon event">🎯</div>
                <div class="activity-content">
                  <div class="activity-text">You created a new event "Summer Concert"</div>
                  <div class="activity-time">2 days ago</div>
                </div>
              </div>
            </div>
          </section>
        </div>

        <!-- Profile Section -->
        <section class="profile-grid" id="profile">
          <div class="profile-card">
            <h2 class="section-title">
              <span>👤</span>
              Artist Profile
            </h2>
            <div class="profile-header">
              <div class="profile-avatar" id="profileAvatar">A</div>
              <div class="profile-info">
                <h3 id="profileName">Artist Name</h3>
                <div class="profile-type">Professional Artist</div>
              </div>
            </div>
            <form class="profile-fields" id="profileForm">
              <div class="field-group">
                <label class="field-label">Stage Name</label>
                <input type="text" class="field-input" id="stageName" placeholder="Your artist name">
              </div>

              <div class="field-group">
                <label class="field-label">Bio</label>
                <textarea class="field-input" id="bio" rows="3" placeholder="Tell people about your music and story..."></textarea>
              </div>

              <div class="field-group">
                <label class="field-label">Primary Genre</label>
                <select class="field-select" id="genre">
                  <option value="">Select your genre</option>
                  <option value="pop">Pop</option>
                  <option value="rock">Rock</option>
                  <option value="jazz">Jazz</option>
                  <option value="classical">Classical</option>
                  <option value="electronic">Electronic</option>
                  <option value="hip-hop">Hip Hop</option>
                  <option value="country">Country</option>
                  <option value="folk">Folk</option>
                  <option value="reggae">Reggae</option>
                  <option value="blues">Blues</option>
                  <option value="other">Other</option>
                </select>
              </div>

              <div class="field-group">
                <label class="field-label">Experience Level</label>
                <select class="field-select" id="experience">
                  <option value="">Select experience</option>
                  <option value="beginner">Beginner (0-2 years)</option>
                  <option value="intermediate">Intermediate (3-5 years)</option>
                  <option value="advanced">Advanced (6-10 years)</option>
                  <option value="professional">Professional (10+ years)</option>
                </select>
              </div>

              <button type="submit" class="btn btn-primary">
                <span>💾</span>
                Update Profile
              </button>
            </form>
          </div>

          <div class="profile-card">
            <h2 class="section-title">
              <span>🌐</span>
              Social Links
            </h2>
            <form class="profile-fields" id="socialForm">
              <div class="field-group">
                <label class="field-label">Website</label>
                <input type="url" class="field-input" id="website" placeholder="https://yourwebsite.com">
              </div>

              <div class="field-group">
                <label class="field-label">Instagram</label>
                <input type="text" class="field-input" id="instagram" placeholder="@yourusername">
              </div>

              <div class="field-group">
                <label class="field-label">Spotify</label>
                <input type="url" class="field-input" id="spotify" placeholder="https://open.spotify.com/artist/...">
              </div>

              <div class="field-group">
                <label class="field-label">YouTube</label>
                <input type="url" class="field-input" id="youtube" placeholder="https://youtube.com/@channel">
              </div>

              <button type="submit" class="btn btn-secondary">
                <span>🔗</span>
                Update Links
              </button>
            </form>
          </div>
        </section>
      </div>
    </main>

    <script>
      // Dashboard functionality
      let currentUser = null;

      // Check authentication and load dashboard
      async function initDashboard() {
        try {
          const response = await fetch('/api/auth/validate');
          if (!response.ok) {
            window.location.href = '/auth/login?redirect=/dashboard/artist';
            return;
          }

          const data = await response.json();
          currentUser = data.user;

          if (currentUser.user_type !== 'artist') {
            window.location.href = '/';
            return;
          }

          await loadDashboard();
        } catch (error) {
          console.error('Dashboard initialization failed:', error);
          window.location.href = '/auth/login';
        }
      }

      // Load dashboard data
      async function loadDashboard() {
        try {
          // Update user info
          document.getElementById('artistName').textContent = currentUser.name;
          document.getElementById('profileName').textContent = currentUser.name;
          document.getElementById('profileAvatar').textContent = 
            currentUser.name.split(' ').map(n => n[0]).join('').toUpperCase();

          // Load stats
          const statsResponse = await fetch('/api/dashboard/stats');
          if (statsResponse.ok) {
            const stats = await statsResponse.json();
            
            document.getElementById('eventsCount').textContent = stats.events_created || 0;
            document.getElementById('totalViews').textContent = formatNumber(stats.total_views || 0);
            document.getElementById('totalLikes').textContent = stats.total_likes || 0;
            document.getElementById('followersCount').textContent = stats.followers_count || 0;
          }

          // Load profile data
          loadProfileData();

          // Show dashboard
          document.getElementById('loadingState').classList.remove('show');
          document.getElementById('dashboardContent').style.display = 'block';

        } catch (error) {
          console.error('Error loading dashboard:', error);
        }
      }

      // Load profile data
      function loadProfileData() {
        // These would come from a profile API endpoint
        // For now, using placeholder values
        document.getElementById('stageName').value = currentUser.name || '';
        document.getElementById('bio').value = '';
        document.getElementById('genre').value = '';
        document.getElementById('experience').value = '';
        document.getElementById('website').value = '';
        document.getElementById('instagram').value = '';
        document.getElementById('spotify').value = '';
        document.getElementById('youtube').value = '';
      }

      // Format numbers for display
      function formatNumber(num) {
        if (num >= 1000000) {
          return (num / 1000000).toFixed(1) + 'M';
        } else if (num >= 1000) {
          return (num / 1000).toFixed(1) + 'K';
        } else {
          return num.toString();
        }
      }

      // Scroll to profile section
      function scrollToProfile() {
        document.getElementById('profile').scrollIntoView({ 
          behavior: 'smooth',
          block: 'start' 
        });
      }

      // Handle profile form submission
      document.getElementById('profileForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = {
          stageName: document.getElementById('stageName').value,
          bio: document.getElementById('bio').value,
          genre: document.getElementById('genre').value,
          experience: document.getElementById('experience').value
        };

        try {
          const response = await fetch('/api/auth/profile', {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(formData)
          });

          if (response.ok) {
            // Show success message
            alert('Profile updated successfully!');
          } else {
            alert('Failed to update profile. Please try again.');
          }
        } catch (error) {
          console.error('Profile update failed:', error);
          alert('Failed to update profile. Please try again.');
        }
      });

      // Handle social form submission
      document.getElementById('socialForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const socialData = {
          website: document.getElementById('website').value,
          instagram: document.getElementById('instagram').value,
          spotify: document.getElementById('spotify').value,
          youtube: document.getElementById('youtube').value
        };

        try {
          // This would call a social links API endpoint
          console.log('Social links:', socialData);
          alert('Social links updated successfully!');
        } catch (error) {
          console.error('Social links update failed:', error);
          alert('Failed to update social links. Please try again.');
        }
      });

      // Initialize dashboard on page load
      document.addEventListener('DOMContentLoaded', initDashboard);
    </script>
  </body>
</html> 