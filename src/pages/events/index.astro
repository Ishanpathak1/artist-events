---
import { Pool } from 'pg';

// Database connection
const connectionString = process.env.NEON_DATABASE_URL || process.env.DATABASE_URL || 
  'postgresql://ishanpathak@localhost:5432/artist_events';

const pool = new Pool({
  connectionString,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false,
});

// Get all published events from database
async function getPublishedEvents() {
  const client = await pool.connect();
  try {
    const result = await client.query(`
      SELECT 
        e.id, e.slug, e.title, e.description, 
        e.start_date, e.end_date, e.start_time, e.end_time,
        e.event_type, e.genre, e.ticket_price, e.rsvp_url,
        e.featured, e.image_url,
        v.name as venue_name, v.city as venue_city,
        ARRAY_AGG(DISTINCT a.name) FILTER (WHERE a.name IS NOT NULL) as artists,
        ARRAY_AGG(DISTINCT t.name) FILTER (WHERE t.name IS NOT NULL) as tags
      FROM events e
      LEFT JOIN venues v ON e.venue_id = v.id
      LEFT JOIN event_artists ea ON e.id = ea.event_id
      LEFT JOIN artists a ON ea.artist_id = a.id
      LEFT JOIN event_tags et ON e.id = et.event_id
      LEFT JOIN tags t ON et.tag_id = t.id
      WHERE e.status = 'published'
      GROUP BY e.id, v.name, v.city
      ORDER BY e.start_date ASC, e.start_time ASC
    `);
    
    return result.rows;
  } finally {
    client.release();
  }
}

const dbEvents = await getPublishedEvents();

// Format events to match the old JSON structure
const events = dbEvents.map(event => ({
  slug: event.slug,
  title: event.title,
  artist: event.artists?.[0] || 'Unknown Artist',
  date: event.start_date,
  location: event.venue_name || 'TBD',
  description: event.description,
  genre: event.genre,
  ticketPrice: event.ticket_price,
  rsvp: event.rsvp_url,
  tags: event.tags || [],
  featured: event.featured
}));
---

<html>
  <head>
    <title>Upcoming Events - Artist Events</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
      body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        line-height: 1.6;
        color: #333;
        background-color: #f8f9fa;
      }
      
      .header {
        text-align: center;
        margin-bottom: 40px;
        padding: 20px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      }
      
      .title {
        color: #2c3e50;
        margin-bottom: 10px;
      }
      
      .subtitle {
        color: #6c757d;
        margin-bottom: 20px;
      }
      
      .add-event-btn {
        display: inline-block;
        background: #007bff;
        color: white;
        padding: 10px 20px;
        text-decoration: none;
        border-radius: 8px;
        font-weight: 500;
        transition: background 0.2s;
      }
      
      .add-event-btn:hover {
        background: #0056b3;
      }
      
      .events-grid {
        display: grid;
        gap: 20px;
      }
      
      .event-card {
        background: white;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        transition: transform 0.2s, box-shadow 0.2s;
        text-decoration: none;
        color: inherit;
        display: block;
      }
      
      .event-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 20px rgba(0,0,0,0.15);
        text-decoration: none;
      }
      
      .event-title {
        color: #2c3e50;
        margin-bottom: 8px;
        font-size: 1.2em;
        font-weight: 600;
      }
      
      .event-artist {
        color: #6c757d;
        font-size: 0.9em;
        margin-bottom: 10px;
      }
      
      .event-meta {
        display: flex;
        gap: 15px;
        margin-bottom: 10px;
        font-size: 0.9em;
        color: #666;
      }
      
      .event-description {
        color: #666;
        font-size: 0.9em;
        margin-top: 10px;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }
      
      .empty-state {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      }
      
      .empty-title {
        color: #6c757d;
        margin-bottom: 20px;
      }
    </style>
  </head>
  <body>
    <div class="header">
      <h1 class="title">Upcoming Events</h1>
      <p class="subtitle">Discover amazing events from talented artists</p>
      <a href="/submit" class="add-event-btn">+ Submit Your Event</a>
    </div>

    {events.length > 0 ? (
      <div class="events-grid">
        {events.map(event => (
          <a href={`/events/${event.slug}`} class="event-card">
            <div class="event-title">{event.title}</div>
            <div class="event-artist">by {event.artist}</div>
            <div class="event-meta">
              <span><strong>Date:</strong> {event.date}</span>
              <span><strong>Location:</strong> {event.location}</span>
            </div>
            <div class="event-description">{event.description}</div>
          </a>
        ))}
      </div>
    ) : (
      <div class="empty-state">
        <h2 class="empty-title">No events yet</h2>
        <p>Be the first to submit an event!</p>
        <a href="/submit" class="add-event-btn">Submit Your Event</a>
      </div>
    )}
  </body>
</html>
